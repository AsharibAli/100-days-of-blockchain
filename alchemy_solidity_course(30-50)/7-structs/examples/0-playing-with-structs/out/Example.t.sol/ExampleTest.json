{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "example",
      "outputs": [
        {
          "internalType": "contract Example",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testExample",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260008054600160ff19918216811790925560048054909116909117905534801561002d57600080fd5b506115a08061003d6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806366d9a9a01161008c578063b5508aa911610066578063b5508aa914610171578063ba414fa614610179578063e20c9f7114610191578063fa7626d41461019957600080fd5b806366d9a9a01461013f57806385226c8114610154578063916a17c61461016957600080fd5b80630a9254e4146100d45780631ed7831c146100de5780633e5e3c23146100fc5780633f5a4a2a146101045780633f7286f41461010c57806354353f2f14610114575b600080fd5b6100dc6101a6565b005b6100e66101f1565b6040516100f39190610cdb565b60405180910390f35b6100e6610253565b6100dc6102b3565b6100e6610450565b601b54610127906001600160a01b031681565b6040516001600160a01b0390911681526020016100f3565b6101476104b0565b6040516100f39190610d28565b61015c61059f565b6040516100f39190610dff565b61014761066f565b61015c610755565b610181610825565b60405190151581526020016100f3565b6100e6610950565b6000546101819060ff1681565b6040516101b290610cce565b604051809103906000f0801580156101ce573d6000803e3d6000fd5b50601b80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600d80548060200260200160405190810160405280929190818152602001828054801561024957602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161022b575b5050505050905090565b6060600f805480602002602001604051908101604052809291908181526020018280548015610249576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161022b575050505050905090565b601b54604051634d2eb52560e11b81526000600482015260016024820152670de0b6b3a764000060448201526001600160a01b0390911690639a5d6a4a90606401600060405180830381600087803b15801561030e57600080fd5b505af1158015610322573d6000803e3d6000fd5b5050505061033060006109b0565b601b54604051638b3c99e360e01b8152600060048201526001600160a01b0390911690638b3c99e390670de0b6b3a7640000906024016000604051808303818588803b15801561037f57600080fd5b505af1158015610393573d6000803e3d6000fd5b5050601b5460405163d09ef24160e01b815260006004820181905294506001600160a01b03909116925063d09ef2419150602401608060405180830381865afa1580156103e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104089190610e90565b601b5490915061042a906001600160a01b031631670de0b6b3a7640000610a97565b61044d8160600151600181111561044357610443610f1a565b60ff166001610a97565b50565b6060600e805480602002602001604051908101604052809291908181526020018280548015610249576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161022b575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156105965760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561057e57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116105405790505b505050505081525050815260200190600101906104d4565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156105965783829060005260206000200180546105e290610f30565b80601f016020809104026020016040519081016040528092919081815260200182805461060e90610f30565b801561065b5780601f106106305761010080835404028352916020019161065b565b820191906000526020600020905b81548152906001019060200180831161063e57829003601f168201915b5050505050815260200190600101906105c3565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156105965760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561073d57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116106ff5790505b50505050508152505081526020019060010190610693565b60606010805480602002602001604051908101604052809291908181526020016000905b8282101561059657838290600052602060002001805461079890610f30565b80601f01602080910402602001604051908101604052809291908181526020018280546107c490610f30565b80156108115780601f106107e657610100808354040283529160200191610811565b820191906000526020600020905b8154815290600101906020018083116107f457829003601f168201915b505050505081526020019060010190610779565b60008054610100900460ff16156108455750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561094b5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916108d3917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610f6a565b60408051601f19818403018152908290526108ed91610f9b565b6000604051808303816000865af19150503d806000811461092a576040519150601f19603f3d011682016040523d82523d6000602084013e61092f565b606091505b50915050808060200190518101906109479190610fb7565b9150505b919050565b6060600c805480602002602001604051908101604052809291908181526020018280548015610249576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161022b575050505050905090565b60405163c88a5e6d60e01b81526001600160a01b0382166004820152600160801b6024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b158015610a0f57600080fd5b505af1158015610a23573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0384166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b158015610a7c57600080fd5b505af1158015610a90573d6000803e3d6000fd5b5050505050565b808214610bbe577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610b089060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1610bbe610bc2565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610cbd5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052610c5c9291602001610f6a565b60408051601f1981840301815290829052610c7691610f9b565b6000604051808303816000865af19150503d8060008114610cb3576040519150601f19603f3d011682016040523d82523d6000602084013e610cb8565b606091505b505050505b6000805461ff001916610100179055565b61058a80610fe183390190565b6020808252825182820181905260009190848201906040850190845b81811015610d1c5783516001600160a01b031683529284019291840191600101610cf7565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610dcc57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015610db75783516001600160e01b0319168252928b019260019290920191908b0190610d8d565b50978a01979550505091870191600101610d50565b50919998505050505050505050565b60005b83811015610df6578181015183820152602001610dde565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610e6c57878503603f1901845281518051808752610e4d818989018a8501610ddb565b601f01601f191695909501860194509285019290850190600101610e26565b5092979650505050505050565b80516001600160a01b038116811461094b57600080fd5b600060808284031215610ea257600080fd5b6040516080810181811067ffffffffffffffff82111715610ed357634e487b7160e01b600052604160045260246000fd5b604052610edf83610e79565b8152610eed60208401610e79565b602082015260408301516040820152606083015160028110610f0e57600080fd5b60608201529392505050565b634e487b7160e01b600052602160045260246000fd5b600181811c90821680610f4457607f821691505b602082108103610f6457634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b0319831681528151600090610f8d816004850160208701610ddb565b919091016004019392505050565b60008251610fad818460208701610ddb565b9190910192915050565b600060208284031215610fc957600080fd5b81518015158114610fd957600080fd5b939250505056fe608060405234801561001057600080fd5b5061056a806100206000396000f3fe60806040526004361061003f5760003560e01c80638b3c99e3146100445780639a5d6a4a14610059578063a85c38ef14610079578063d09ef241146100b2575b600080fd5b6100576100523660046103d5565b6100df565b005b34801561006557600080fd5b5061005761007436600461040a565b610162565b34801561008557600080fd5b506100996100943660046103d5565b6102cc565b6040516100a9949392919061047e565b60405180910390f35b3480156100be57600080fd5b506100d26100cd3660046103d5565b610315565b6040516100a991906104b3565b60008082815481106100f3576100f36104f7565b6000918252602090912060049091020180549091506001600160a01b0316331461011c57600080fd5b3481600201541461012c57600080fd5b6000600382015460ff16600181111561014757610147610446565b1461015157600080fd5b600301805460ff1916600117905550565b604080516080810182526001600160a01b03858116825284811660208301908152928201848152600060608401818152815460018082018455928052855160049091027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563810180549287166001600160a01b031993841617815597517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564820180549190971692169190911790945591517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56584015590517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56690920180549394859490939260ff1990911690838181111561027d5761027d610446565b021790555050600054610293915060019061050d565b6040518381527f7ab7b5bf31475b82f820e7fdfd6387632fc391f3bbd3f28afa54804f30bebd4d9060200160405180910390a250505050565b600081815481106102dc57600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b0392831694509116919060ff1684565b61033d6040805160808101825260008082526020820181905291810182905290606082015290565b60008281548110610350576103506104f7565b600091825260209182902060408051608081018252600490930290910180546001600160a01b03908116845260018083015490911694840194909452600281015491830191909152600381015491929091606084019160ff909116908111156103bb576103bb610446565b60018111156103cc576103cc610446565b90525092915050565b6000602082840312156103e757600080fd5b5035919050565b80356001600160a01b038116811461040557600080fd5b919050565b60008060006060848603121561041f57600080fd5b610428846103ee565b9250610436602085016103ee565b9150604084013590509250925092565b634e487b7160e01b600052602160045260246000fd5b6002811061047a57634e487b7160e01b600052602160045260246000fd5b9052565b6001600160a01b0385811682528416602082015260408101839052608081016104aa606083018461045c565b95945050505050565b81516001600160a01b039081168252602080840151909116908201526040808301519082015260608083015160808301916104f09084018261045c565b5092915050565b634e487b7160e01b600052603260045260246000fd5b8181038181111561052e57634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212201a863853507c3b9cae4eea51b57db51748a9c86bf683db7bdbd4fe6ab4cd565e64736f6c63430008140033a26469706673582212200ba14a83e482d36ee8befe138b3b8440b8e3981e5394a26075308f06d91d2dbd64736f6c63430008140033",
    "sourceMap": "124:531:19:-:0;;;1572:26:0;;;1594:4;-1:-1:-1;;1572:26:0;;;;;;;;3126:44:3;;;;;;;;;;;124:531:19;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c806366d9a9a01161008c578063b5508aa911610066578063b5508aa914610171578063ba414fa614610179578063e20c9f7114610191578063fa7626d41461019957600080fd5b806366d9a9a01461013f57806385226c8114610154578063916a17c61461016957600080fd5b80630a9254e4146100d45780631ed7831c146100de5780633e5e3c23146100fc5780633f5a4a2a146101045780633f7286f41461010c57806354353f2f14610114575b600080fd5b6100dc6101a6565b005b6100e66101f1565b6040516100f39190610cdb565b60405180910390f35b6100e6610253565b6100dc6102b3565b6100e6610450565b601b54610127906001600160a01b031681565b6040516001600160a01b0390911681526020016100f3565b6101476104b0565b6040516100f39190610d28565b61015c61059f565b6040516100f39190610dff565b61014761066f565b61015c610755565b610181610825565b60405190151581526020016100f3565b6100e6610950565b6000546101819060ff1681565b6040516101b290610cce565b604051809103906000f0801580156101ce573d6000803e3d6000fd5b50601b80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600d80548060200260200160405190810160405280929190818152602001828054801561024957602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161022b575b5050505050905090565b6060600f805480602002602001604051908101604052809291908181526020018280548015610249576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161022b575050505050905090565b601b54604051634d2eb52560e11b81526000600482015260016024820152670de0b6b3a764000060448201526001600160a01b0390911690639a5d6a4a90606401600060405180830381600087803b15801561030e57600080fd5b505af1158015610322573d6000803e3d6000fd5b5050505061033060006109b0565b601b54604051638b3c99e360e01b8152600060048201526001600160a01b0390911690638b3c99e390670de0b6b3a7640000906024016000604051808303818588803b15801561037f57600080fd5b505af1158015610393573d6000803e3d6000fd5b5050601b5460405163d09ef24160e01b815260006004820181905294506001600160a01b03909116925063d09ef2419150602401608060405180830381865afa1580156103e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104089190610e90565b601b5490915061042a906001600160a01b031631670de0b6b3a7640000610a97565b61044d8160600151600181111561044357610443610f1a565b60ff166001610a97565b50565b6060600e805480602002602001604051908101604052809291908181526020018280548015610249576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161022b575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156105965760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561057e57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116105405790505b505050505081525050815260200190600101906104d4565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156105965783829060005260206000200180546105e290610f30565b80601f016020809104026020016040519081016040528092919081815260200182805461060e90610f30565b801561065b5780601f106106305761010080835404028352916020019161065b565b820191906000526020600020905b81548152906001019060200180831161063e57829003601f168201915b5050505050815260200190600101906105c3565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156105965760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561073d57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116106ff5790505b50505050508152505081526020019060010190610693565b60606010805480602002602001604051908101604052809291908181526020016000905b8282101561059657838290600052602060002001805461079890610f30565b80601f01602080910402602001604051908101604052809291908181526020018280546107c490610f30565b80156108115780601f106107e657610100808354040283529160200191610811565b820191906000526020600020905b8154815290600101906020018083116107f457829003601f168201915b505050505081526020019060010190610779565b60008054610100900460ff16156108455750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561094b5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916108d3917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610f6a565b60408051601f19818403018152908290526108ed91610f9b565b6000604051808303816000865af19150503d806000811461092a576040519150601f19603f3d011682016040523d82523d6000602084013e61092f565b606091505b50915050808060200190518101906109479190610fb7565b9150505b919050565b6060600c805480602002602001604051908101604052809291908181526020018280548015610249576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161022b575050505050905090565b60405163c88a5e6d60e01b81526001600160a01b0382166004820152600160801b6024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b158015610a0f57600080fd5b505af1158015610a23573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0384166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b158015610a7c57600080fd5b505af1158015610a90573d6000803e3d6000fd5b5050505050565b808214610bbe577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610b089060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1610bbe610bc2565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610cbd5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052610c5c9291602001610f6a565b60408051601f1981840301815290829052610c7691610f9b565b6000604051808303816000865af19150503d8060008114610cb3576040519150601f19603f3d011682016040523d82523d6000602084013e610cb8565b606091505b505050505b6000805461ff001916610100179055565b61058a80610fe183390190565b6020808252825182820181905260009190848201906040850190845b81811015610d1c5783516001600160a01b031683529284019291840191600101610cf7565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610dcc57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015610db75783516001600160e01b0319168252928b019260019290920191908b0190610d8d565b50978a01979550505091870191600101610d50565b50919998505050505050505050565b60005b83811015610df6578181015183820152602001610dde565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610e6c57878503603f1901845281518051808752610e4d818989018a8501610ddb565b601f01601f191695909501860194509285019290850190600101610e26565b5092979650505050505050565b80516001600160a01b038116811461094b57600080fd5b600060808284031215610ea257600080fd5b6040516080810181811067ffffffffffffffff82111715610ed357634e487b7160e01b600052604160045260246000fd5b604052610edf83610e79565b8152610eed60208401610e79565b602082015260408301516040820152606083015160028110610f0e57600080fd5b60608201529392505050565b634e487b7160e01b600052602160045260246000fd5b600181811c90821680610f4457607f821691505b602082108103610f6457634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b0319831681528151600090610f8d816004850160208701610ddb565b919091016004019392505050565b60008251610fad818460208701610ddb565b9190910192915050565b600060208284031215610fc957600080fd5b81518015158114610fd957600080fd5b939250505056fe608060405234801561001057600080fd5b5061056a806100206000396000f3fe60806040526004361061003f5760003560e01c80638b3c99e3146100445780639a5d6a4a14610059578063a85c38ef14610079578063d09ef241146100b2575b600080fd5b6100576100523660046103d5565b6100df565b005b34801561006557600080fd5b5061005761007436600461040a565b610162565b34801561008557600080fd5b506100996100943660046103d5565b6102cc565b6040516100a9949392919061047e565b60405180910390f35b3480156100be57600080fd5b506100d26100cd3660046103d5565b610315565b6040516100a991906104b3565b60008082815481106100f3576100f36104f7565b6000918252602090912060049091020180549091506001600160a01b0316331461011c57600080fd5b3481600201541461012c57600080fd5b6000600382015460ff16600181111561014757610147610446565b1461015157600080fd5b600301805460ff1916600117905550565b604080516080810182526001600160a01b03858116825284811660208301908152928201848152600060608401818152815460018082018455928052855160049091027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563810180549287166001600160a01b031993841617815597517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564820180549190971692169190911790945591517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56584015590517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56690920180549394859490939260ff1990911690838181111561027d5761027d610446565b021790555050600054610293915060019061050d565b6040518381527f7ab7b5bf31475b82f820e7fdfd6387632fc391f3bbd3f28afa54804f30bebd4d9060200160405180910390a250505050565b600081815481106102dc57600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b0392831694509116919060ff1684565b61033d6040805160808101825260008082526020820181905291810182905290606082015290565b60008281548110610350576103506104f7565b600091825260209182902060408051608081018252600490930290910180546001600160a01b03908116845260018083015490911694840194909452600281015491830191909152600381015491929091606084019160ff909116908111156103bb576103bb610446565b60018111156103cc576103cc610446565b90525092915050565b6000602082840312156103e757600080fd5b5035919050565b80356001600160a01b038116811461040557600080fd5b919050565b60008060006060848603121561041f57600080fd5b610428846103ee565b9250610436602085016103ee565b9150604084013590509250925092565b634e487b7160e01b600052602160045260246000fd5b6002811061047a57634e487b7160e01b600052602160045260246000fd5b9052565b6001600160a01b0385811682528416602082015260408101839052608081016104aa606083018461045c565b95945050505050565b81516001600160a01b039081168252602080840151909116908201526040808301519082015260608083015160808301916104f09084018261045c565b5092915050565b634e487b7160e01b600052603260045260246000fd5b8181038181111561052e57634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212201a863853507c3b9cae4eea51b57db51748a9c86bf683db7bdbd4fe6ab4cd565e64736f6c63430008140033a26469706673582212200ba14a83e482d36ee8befe138b3b8440b8e3981e5394a26075308f06d91d2dbd64736f6c63430008140033",
    "sourceMap": "124:531:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;188:64;;;:::i;:::-;;2170:134:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2939:133;;;:::i;258:395:19:-;;;:::i;2640:141:6:-;;;:::i;159:22:19:-;;;;;-1:-1:-1;;;;;159:22:19;;;;;;-1:-1:-1;;;;;858:32:20;;;840:51;;828:2;813:18;159:22:19;677:220:20;2456:178:6;;;:::i;:::-;;;;;;;:::i;2310:140::-;;;:::i;:::-;;;;;;;:::i;2787:146::-;;;:::i;1875:141::-;;;:::i;1819:584:0:-;;;:::i;:::-;;;3913:14:20;;3906:22;3888:41;;3876:2;3861:18;1819:584:0;3748:187:20;2022:142:6;;;:::i;1572:26:0:-;;;;;;;;;188:64:19;232:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;222:7:19;:23;;-1:-1:-1;;;;;;222:23:19;-1:-1:-1;;;;;222:23:19;;;;;;;;;;188:64::o;2170:134:6:-;2217:33;2281:16;2262:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2262:35:6;;;;;;;;;;;;;;;;;;;;;;;2170:134;:::o;2939:133::-;2985:33;3049:16;3030:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3030:35:6;;;;;;;;;;;;;;;;;;;;;;2939:133;:::o;258:395:19:-;298:7;;:52;;-1:-1:-1;;;298:52:19;;:7;:52;;;4206:34:20;298:7:19;4256:18:20;;;4249:43;342:7:19;4308:18:20;;;4301:34;-1:-1:-1;;;;;298:7:19;;;;:19;;4141:18:20;;298:52:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;400:16;413:1;400:4;:16::i;:::-;427:7;;:34;;-1:-1:-1;;;427:34:19;;:7;:34;;;4500:25:20;-1:-1:-1;;;;;427:7:19;;;;:15;;450:7;;4473:18:20;;427:34:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;501:7:19;;:19;;-1:-1:-1;;;501:19:19;;472:26;501:19;;;4500:25:20;;;472:26:19;-1:-1:-1;;;;;;501:7:19;;;;-1:-1:-1;501:16:19;;-1:-1:-1;4473:18:20;;501:19:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;548:7;;472:48;;-1:-1:-1;531:43:19;;-1:-1:-1;;;;;548:7:19;540:24;566:7;531:8;:43::i;:::-;584:62;599:5;:12;;;593:19;;;;;;;;:::i;:::-;584:62;;620:24;584:8;:62::i;:::-;288:365;258:395::o;2640:141:6:-;2688:35;2756:18;2735:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2735:39:6;;;;;;;;;;;;;;;;;;;;;;2640:141;:::o;2456:178::-;2512:48;2601:26;2572:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2572:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2572:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2456:178;:::o;2310:140::-;2358:34;2425:18;2404:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2787:146;2835:40;2908:18;2887:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2887:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2887:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1875:141;1924:34;1991:18;1970:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:0;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;6255:51:20;;;-1:-1:-1;;;6322:18:20;;;6315:34;2196:43:0;;;;;;;;;6228:18:20;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;2022:142:6:-;2071:35;2139:18;2118:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2118:39:6;;;;;;;;;;;;;;;;;;;;;;2022:142;:::o;24618:124:4:-;24678:28;;-1:-1:-1;;;24678:28:4;;-1:-1:-1;;;;;6273:32:20;;24678:28:4;;;6255:51:20;-1:-1:-1;;;6322:18:20;;;6315:34;24678:7:4;;;;6228:18:20;;24678:28:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;24716:19:4;;-1:-1:-1;;;24716:19:4;;-1:-1:-1;;;;;858:32:20;;24716:19:4;;;840:51:20;24716:8:4;;-1:-1:-1;24716:8:4;;-1:-1:-1;813:18:20;;24716:19:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24618:124;:::o;5209:262:0:-;5271:1;5266;:6;5262:203;;5293:41;;;;;8058:2:20;8040:21;;;8097:2;8077:18;;;8070:30;8136:34;8131:2;8116:18;;8109:62;-1:-1:-1;;;8202:2:20;8187:18;;8180:32;8244:3;8229:19;;7856:398;5293:41:0;;;;;;;;5353:31;;;8471:21:20;;;8528:2;8508:18;;;8501:30;-1:-1:-1;;;8562:2:20;8547:18;;8540:40;8647:4;8632:20;;8625:36;;;5353:31:0;;;;;;;8612:3:20;5353:31:0;;;5403;;;8884:21:20;;;8941:2;8921:18;;;8914:30;-1:-1:-1;;;8975:2:20;8960:18;;8953:40;9060:4;9045:20;;9038:36;;;5403:31:0;;;;;;;9025:3:20;5403:31:0;;;5448:6;:4;:6::i;:::-;5209:262;;:::o;2409:432::-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;9287:51:20;;;-1:-1:-1;;;9354:18:20;;;9347:34;;;;2712:4:0;9397:18:20;;;9390:34;2489:11:0;;1671:64;2586:43;;9260:18:20;;2652:67:0;;;-1:-1:-1;;2652:67:0;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:0;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:0;2820:7;:14;;-1:-1:-1;;2820:14:0;;;;;2409:432::o;-1:-1:-1:-;;;;;;;;:::o;14:658:20:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:20;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:20;;14:658;-1:-1:-1;;;;;;14:658:20:o;902:1567::-;1104:4;1133:2;1173;1162:9;1158:18;1203:2;1192:9;1185:21;1226:6;1261;1255:13;1292:6;1284;1277:22;1318:2;1308:12;;1351:2;1340:9;1336:18;1329:25;;1413:2;1403:6;1400:1;1396:14;1385:9;1381:30;1377:39;1451:2;1443:6;1439:15;1472:1;1493;1503:937;1519:6;1514:3;1511:15;1503:937;;;1588:22;;;-1:-1:-1;;1584:36:20;1572:49;;1644:13;;1731:9;;-1:-1:-1;;;;;1727:35:20;1712:51;;1802:11;;1796:18;1834:15;;;1827:27;;;1915:19;;1684:15;;;1947:24;;;2037:21;;;;2082:1;;2005:2;1993:15;;;2096:236;2112:8;2107:3;2104:17;2096:236;;;2193:15;;-1:-1:-1;;;;;;2189:42:20;2175:57;;2301:17;;;;2140:1;2131:11;;;;;2258:14;;;;2096:236;;;-1:-1:-1;2418:12:20;;;;2355:5;-1:-1:-1;;;2383:15:20;;;;1545:1;1536:11;1503:937;;;-1:-1:-1;2457:6:20;;902:1567;-1:-1:-1;;;;;;;;;902:1567:20:o;2474:250::-;2559:1;2569:113;2583:6;2580:1;2577:13;2569:113;;;2659:11;;;2653:18;2640:11;;;2633:39;2605:2;2598:10;2569:113;;;-1:-1:-1;;2716:1:20;2698:16;;2691:27;2474:250::o;2729:1014::-;2891:4;2920:2;2960;2949:9;2945:18;2990:2;2979:9;2972:21;3013:6;3048;3042:13;3079:6;3071;3064:22;3117:2;3106:9;3102:18;3095:25;;3179:2;3169:6;3166:1;3162:14;3151:9;3147:30;3143:39;3129:53;;3217:2;3209:6;3205:15;3238:1;3248:466;3262:6;3259:1;3256:13;3248:466;;;3327:22;;;-1:-1:-1;;3323:36:20;3311:49;;3383:13;;3425:9;;3447:24;;;3484:74;3425:9;3532:15;;;3519:11;;;3484:74;:::i;:::-;3624:2;3601:17;-1:-1:-1;;3597:31:20;3585:44;;;;3581:53;;;-1:-1:-1;3692:12:20;;;;3657:15;;;;3284:1;3277:9;3248:466;;;-1:-1:-1;3731:6:20;;2729:1014;-1:-1:-1;;;;;;;2729:1014:20:o;4536:177::-;4615:13;;-1:-1:-1;;;;;4657:31:20;;4647:42;;4637:70;;4703:1;4700;4693:12;4718:841;4812:6;4865:3;4853:9;4844:7;4840:23;4836:33;4833:53;;;4882:1;4879;4872:12;4833:53;4915:2;4909:9;4957:3;4949:6;4945:16;5027:6;5015:10;5012:22;4991:18;4979:10;4976:34;4973:62;4970:185;;;5077:10;5072:3;5068:20;5065:1;5058:31;5112:4;5109:1;5102:15;5140:4;5137:1;5130:15;4970:185;5171:2;5164:22;5210:40;5240:9;5210:40;:::i;:::-;5202:6;5195:56;5284:49;5329:2;5318:9;5314:18;5284:49;:::i;:::-;5279:2;5271:6;5267:15;5260:74;5388:2;5377:9;5373:18;5367:25;5362:2;5354:6;5350:15;5343:50;5436:2;5425:9;5421:18;5415:25;5469:1;5462:5;5459:12;5449:40;;5485:1;5482;5475:12;5449:40;5517:2;5505:15;;5498:30;5509:6;4718:841;-1:-1:-1;;;4718:841:20:o;5564:127::-;5625:10;5620:3;5616:20;5613:1;5606:31;5656:4;5653:1;5646:15;5680:4;5677:1;5670:15;5696:380;5775:1;5771:12;;;;5818;;;5839:61;;5893:4;5885:6;5881:17;5871:27;;5839:61;5946:2;5938:6;5935:14;5915:18;5912:38;5909:161;;5992:10;5987:3;5983:20;5980:1;5973:31;6027:4;6024:1;6017:15;6055:4;6052:1;6045:15;5909:161;;5696:380;;;:::o;6360:384::-;-1:-1:-1;;;;;;6545:33:20;;6533:46;;6602:13;;6515:3;;6624:74;6602:13;6687:1;6678:11;;6671:4;6659:17;;6624:74;:::i;:::-;6718:16;;;;6736:1;6714:24;;6360:384;-1:-1:-1;;;6360:384:20:o;6749:287::-;6878:3;6916:6;6910:13;6932:66;6991:6;6986:3;6979:4;6971:6;6967:17;6932:66;:::i;:::-;7014:16;;;;;6749:287;-1:-1:-1;;6749:287:20:o;7041:277::-;7108:6;7161:2;7149:9;7140:7;7136:23;7132:32;7129:52;;;7177:1;7174;7167:12;7129:52;7209:9;7203:16;7262:5;7255:13;7248:21;7241:5;7238:32;7228:60;;7284:1;7281;7274:12;7228:60;7307:5;7041:277;-1:-1:-1;;;7041:277:20:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "example()": "54353f2f",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testExample()": "3f5a4a2a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"example\",\"outputs\":[{\"internalType\":\"contract Example\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testExample\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Example.t.sol\":\"ExampleTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x51e6eb138fc953fac1ac78012a39b3f16d9289ce06a222ba93bb0621768f96e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://653c577e054cf578594148a07b286571d494f401b6d4a940d3ccabd47b29233d\",\"dweb:/ipfs/QmTWDVvR4m82MGXWYY8BCaVN89TguQJSLqRgzHzrMkFHtx\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x2e1b4b99283c16efaf155f7e55ea357943cf6e61fc02aad060534349f63b6cd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d471a35903e8a367a145ca5b5955caf691c723fe1117c6dcffd928d9f8d7c95a\",\"dweb:/ipfs/QmXGnFUGiX9APL8xit7NZQEYBoEL3wWyW1YyFoJQd2pGPe\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xf5762db8ef95099bbe77578cd9349511ed77f4dd63ec98cc6b7cd711447830c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6b0360806a9804eac0f7e07492b5db9c4953c521dabb9a11b17dd610d5b804c\",\"dweb:/ipfs/QmUFozSt3W7drBRdm1cdRow61EABqSLJtkvYZXWmoHUPss\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x391a28a2e54aea51a6fb03a3a48035304ca4d24bc669ddf3d4c152c7162e514d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://475fd0d87ccb0fdc4418dea2babffb4adb4aafb817e61f7ef31c2303f10c6c26\",\"dweb:/ipfs/QmQgcgtZxpkW6DRmbJszN1F8mU6zhaTZGdWWsj77yCuWN9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140\",\"dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xf3b62c75cea11a0e8ef8e6526e5e5c74ae47a892b9bcefc0e98d76066e1ffd24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a41faaf836453e02c71fc272c80b3c90a614b30c9ba636512db0d033c7b93beb\",\"dweb:/ipfs/QmeQAreYYaxztQtFLQdHCzCPEorj9T5foSu2hQmxk7xT5x\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xb569d0b4398fad95f508fb854e832143edf69a897af4250f5f60fe195a2066c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84b722ada97ea7bb841cdc0fa556aa36a02ff2d380fa24f6dc0717a71c6d9c7c\",\"dweb:/ipfs/QmfCH9Q4tvJhPM286GFsE4UCP4YncLpRu4Nwa2ZkHdRfbw\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"src/Example.sol\":{\"keccak256\":\"0x4ffc98df714a5c595fc7302de37b01ff92abf1e0dc28213215f252f11c32334c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://90dabbe41d06f19eb9ccc466dc47811271c7f7fd52e649991667ab1a5ba6fdfb\",\"dweb:/ipfs/QmcHaLe7kAh2C6zUMTLf5xY2jMg5AUp1gaSEbPANK9xcsA\"]},\"test/Example.t.sol\":{\"keccak256\":\"0x1b7f4e84d481e48278b88021852c3948e22354ab1bc48c30dd076865df261a33\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7c2f48e9a67873b6e995c68a8a872a9d962d60f7e3a1b4d0ecba7cef2c747406\",\"dweb:/ipfs/QmY4n41mAUeEGzNU3Yz4KPrPxqT9Bqf72Vt8BJA3RMcis9\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "example",
          "outputs": [
            {
              "internalType": "contract Example",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testExample"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Example.t.sol": "ExampleTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x51e6eb138fc953fac1ac78012a39b3f16d9289ce06a222ba93bb0621768f96e6",
        "urls": [
          "bzz-raw://653c577e054cf578594148a07b286571d494f401b6d4a940d3ccabd47b29233d",
          "dweb:/ipfs/QmTWDVvR4m82MGXWYY8BCaVN89TguQJSLqRgzHzrMkFHtx"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x2e1b4b99283c16efaf155f7e55ea357943cf6e61fc02aad060534349f63b6cd5",
        "urls": [
          "bzz-raw://d471a35903e8a367a145ca5b5955caf691c723fe1117c6dcffd928d9f8d7c95a",
          "dweb:/ipfs/QmXGnFUGiX9APL8xit7NZQEYBoEL3wWyW1YyFoJQd2pGPe"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xf5762db8ef95099bbe77578cd9349511ed77f4dd63ec98cc6b7cd711447830c1",
        "urls": [
          "bzz-raw://a6b0360806a9804eac0f7e07492b5db9c4953c521dabb9a11b17dd610d5b804c",
          "dweb:/ipfs/QmUFozSt3W7drBRdm1cdRow61EABqSLJtkvYZXWmoHUPss"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x391a28a2e54aea51a6fb03a3a48035304ca4d24bc669ddf3d4c152c7162e514d",
        "urls": [
          "bzz-raw://475fd0d87ccb0fdc4418dea2babffb4adb4aafb817e61f7ef31c2303f10c6c26",
          "dweb:/ipfs/QmQgcgtZxpkW6DRmbJszN1F8mU6zhaTZGdWWsj77yCuWN9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1",
        "urls": [
          "bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140",
          "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xf3b62c75cea11a0e8ef8e6526e5e5c74ae47a892b9bcefc0e98d76066e1ffd24",
        "urls": [
          "bzz-raw://a41faaf836453e02c71fc272c80b3c90a614b30c9ba636512db0d033c7b93beb",
          "dweb:/ipfs/QmeQAreYYaxztQtFLQdHCzCPEorj9T5foSu2hQmxk7xT5x"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xb569d0b4398fad95f508fb854e832143edf69a897af4250f5f60fe195a2066c5",
        "urls": [
          "bzz-raw://84b722ada97ea7bb841cdc0fa556aa36a02ff2d380fa24f6dc0717a71c6d9c7c",
          "dweb:/ipfs/QmfCH9Q4tvJhPM286GFsE4UCP4YncLpRu4Nwa2ZkHdRfbw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "src/Example.sol": {
        "keccak256": "0x4ffc98df714a5c595fc7302de37b01ff92abf1e0dc28213215f252f11c32334c",
        "urls": [
          "bzz-raw://90dabbe41d06f19eb9ccc466dc47811271c7f7fd52e649991667ab1a5ba6fdfb",
          "dweb:/ipfs/QmcHaLe7kAh2C6zUMTLf5xY2jMg5AUp1gaSEbPANK9xcsA"
        ],
        "license": "UNLICENSED"
      },
      "test/Example.t.sol": {
        "keccak256": "0x1b7f4e84d481e48278b88021852c3948e22354ab1bc48c30dd076865df261a33",
        "urls": [
          "bzz-raw://7c2f48e9a67873b6e995c68a8a872a9d962d60f7e3a1b4d0ecba7cef2c747406",
          "dweb:/ipfs/QmY4n41mAUeEGzNU3Yz4KPrPxqT9Bqf72Vt8BJA3RMcis9"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Example.t.sol",
    "id": 43059,
    "exportedSymbols": {
      "DSTest": [
        2291
      ],
      "Example": [
        42971
      ],
      "ExampleTest": [
        43058
      ],
      "StdAssertions": [
        3784
      ],
      "StdChains": [
        4477
      ],
      "StdCheats": [
        7295
      ],
      "StdInvariant": [
        7585
      ],
      "StdStorage": [
        8335
      ],
      "StdStyle": [
        10999
      ],
      "StdUtils": [
        11847
      ],
      "Test": [
        11898
      ],
      "TestBase": [
        2357
      ],
      "Vm": [
        13425
      ],
      "console": [
        21489
      ],
      "console2": [
        29614
      ],
      "safeconsole": [
        42852
      ],
      "stdError": [
        7361
      ],
      "stdJson": [
        8161
      ],
      "stdMath": [
        8303
      ],
      "stdStorage": [
        9788
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:617:19",
    "nodes": [
      {
        "id": 42973,
        "nodeType": "PragmaDirective",
        "src": "39:24:19",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 42974,
        "nodeType": "ImportDirective",
        "src": "65:28:19",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43059,
        "sourceUnit": 11899,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 42975,
        "nodeType": "ImportDirective",
        "src": "94:28:19",
        "nodes": [],
        "absolutePath": "src/Example.sol",
        "file": "../src/Example.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43059,
        "sourceUnit": 42972,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 43058,
        "nodeType": "ContractDefinition",
        "src": "124:531:19",
        "nodes": [
          {
            "id": 42980,
            "nodeType": "VariableDeclaration",
            "src": "159:22:19",
            "nodes": [],
            "constant": false,
            "functionSelector": "54353f2f",
            "mutability": "mutable",
            "name": "example",
            "nameLocation": "174:7:19",
            "scope": 43058,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Example_$42971",
              "typeString": "contract Example"
            },
            "typeName": {
              "id": 42979,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 42978,
                "name": "Example",
                "nameLocations": [
                  "159:7:19"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 42971,
                "src": "159:7:19"
              },
              "referencedDeclaration": 42971,
              "src": "159:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Example_$42971",
                "typeString": "contract Example"
              }
            },
            "visibility": "public"
          },
          {
            "id": 42991,
            "nodeType": "FunctionDefinition",
            "src": "188:64:19",
            "nodes": [],
            "body": {
              "id": 42990,
              "nodeType": "Block",
              "src": "212:40:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 42988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42983,
                      "name": "example",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42980,
                      "src": "222:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Example_$42971",
                        "typeString": "contract Example"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 42986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "232:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Example_$42971_$",
                          "typeString": "function () returns (contract Example)"
                        },
                        "typeName": {
                          "id": 42985,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 42984,
                            "name": "Example",
                            "nameLocations": [
                              "236:7:19"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 42971,
                            "src": "236:7:19"
                          },
                          "referencedDeclaration": 42971,
                          "src": "236:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Example_$42971",
                            "typeString": "contract Example"
                          }
                        }
                      },
                      "id": 42987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "232:13:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Example_$42971",
                        "typeString": "contract Example"
                      }
                    },
                    "src": "222:23:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Example_$42971",
                      "typeString": "contract Example"
                    }
                  },
                  "id": 42989,
                  "nodeType": "ExpressionStatement",
                  "src": "222:23:19"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "197:5:19",
            "parameters": {
              "id": 42981,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "202:2:19"
            },
            "returnParameters": {
              "id": 42982,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "212:0:19"
            },
            "scope": 43058,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43057,
            "nodeType": "FunctionDefinition",
            "src": "258:395:19",
            "nodes": [],
            "body": {
              "id": 43056,
              "nodeType": "Block",
              "src": "288:365:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 42999,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "326:1:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 42998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "318:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42997,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "318:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "318:10:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 43003,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "338:1:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 43002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "330:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 43001,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "330:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "330:10:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 43005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "342:7:19",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 42994,
                        "name": "example",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42980,
                        "src": "298:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Example_$42971",
                          "typeString": "contract Example"
                        }
                      },
                      "id": 42996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "306:11:19",
                      "memberName": "createOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42926,
                      "src": "298:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 43006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "298:52:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43007,
                  "nodeType": "ExpressionStatement",
                  "src": "298:52:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 43011,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "413:1:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 43010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "405:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 43009,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "405:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "405:10:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 43008,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6608,
                        6629,
                        6653,
                        6677
                      ],
                      "referencedDeclaration": 6608,
                      "src": "400:4:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 43013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "400:16:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43014,
                  "nodeType": "ExpressionStatement",
                  "src": "400:16:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 43020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "459:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 43015,
                          "name": "example",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42980,
                          "src": "427:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Example_$42971",
                            "typeString": "contract Example"
                          }
                        },
                        "id": 43017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "435:7:19",
                        "memberName": "payment",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42970,
                        "src": "427:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 43019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 43018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "450:7:19",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "427:31:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 43021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "427:34:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43022,
                  "nodeType": "ExpressionStatement",
                  "src": "427:34:19"
                },
                {
                  "assignments": [
                    43027
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43027,
                      "mutability": "mutable",
                      "name": "order",
                      "nameLocation": "493:5:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 43056,
                      "src": "472:26:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$42868_memory_ptr",
                        "typeString": "struct Example.Order"
                      },
                      "typeName": {
                        "id": 43026,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 43025,
                          "name": "Example.Order",
                          "nameLocations": [
                            "472:7:19",
                            "480:5:19"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 42868,
                          "src": "472:13:19"
                        },
                        "referencedDeclaration": 42868,
                        "src": "472:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$42868_storage_ptr",
                          "typeString": "struct Example.Order"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43032,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 43030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "518:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 43028,
                        "name": "example",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42980,
                        "src": "501:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Example_$42971",
                          "typeString": "contract Example"
                        }
                      },
                      "id": 43029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "509:8:19",
                      "memberName": "getOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42885,
                      "src": "501:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Order_$42868_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (struct Example.Order memory)"
                      }
                    },
                    "id": 43031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "501:19:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$42868_memory_ptr",
                      "typeString": "struct Example.Order memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "472:48:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 43036,
                              "name": "example",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42980,
                              "src": "548:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Example_$42971",
                                "typeString": "contract Example"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Example_$42971",
                                "typeString": "contract Example"
                              }
                            ],
                            "id": 43035,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "540:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 43034,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "540:7:19",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 43037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "540:16:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 43038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "557:7:19",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "540:24:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 43039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "566:7:19",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 43033,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "531:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 43040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "531:43:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43041,
                  "nodeType": "ExpressionStatement",
                  "src": "531:43:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 43045,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43027,
                              "src": "599:5:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$42868_memory_ptr",
                                "typeString": "struct Example.Order memory"
                              }
                            },
                            "id": 43046,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "605:6:19",
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 42867,
                            "src": "599:12:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_OrderStatus_$42858",
                              "typeString": "enum Example.OrderStatus"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_OrderStatus_$42858",
                              "typeString": "enum Example.OrderStatus"
                            }
                          ],
                          "id": 43044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "593:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 43043,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "593:5:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "593:19:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 43050,
                                "name": "Example",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42971,
                                "src": "620:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Example_$42971_$",
                                  "typeString": "type(contract Example)"
                                }
                              },
                              "id": 43051,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "628:11:19",
                              "memberName": "OrderStatus",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 42858,
                              "src": "620:19:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_OrderStatus_$42858_$",
                                "typeString": "type(enum Example.OrderStatus)"
                              }
                            },
                            "id": 43052,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "640:4:19",
                            "memberName": "Paid",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 42857,
                            "src": "620:24:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_OrderStatus_$42858",
                              "typeString": "enum Example.OrderStatus"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_OrderStatus_$42858",
                              "typeString": "enum Example.OrderStatus"
                            }
                          ],
                          "id": 43049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "614:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 43048,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "614:5:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "614:31:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 43042,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "584:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 43054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "584:62:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43055,
                  "nodeType": "ExpressionStatement",
                  "src": "584:62:19"
                }
              ]
            },
            "functionSelector": "3f5a4a2a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testExample",
            "nameLocation": "267:11:19",
            "parameters": {
              "id": 42992,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "278:2:19"
            },
            "returnParameters": {
              "id": 42993,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "288:0:19"
            },
            "scope": 43058,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 42976,
              "name": "Test",
              "nameLocations": [
                "148:4:19"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11898,
              "src": "148:4:19"
            },
            "id": 42977,
            "nodeType": "InheritanceSpecifier",
            "src": "148:4:19"
          }
        ],
        "canonicalName": "ExampleTest",
        "contractDependencies": [
          42971
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          43058,
          11898,
          2357,
          2354,
          11847,
          7585,
          7295,
          6531,
          4477,
          3784,
          2291
        ],
        "name": "ExampleTest",
        "nameLocation": "133:11:19",
        "scope": 43059,
        "usedErrors": [],
        "usedEvents": [
          5,
          9,
          13,
          17,
          21,
          25,
          29,
          33,
          39,
          45,
          53,
          61,
          67,
          73,
          79,
          85,
          2379,
          2384,
          2389,
          2396,
          2403,
          2410
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 19
}